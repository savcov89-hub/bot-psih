import asyncio
import os
import logging
import sys

from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, F, types
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web

from openai import AsyncOpenAI

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
# URL –≤–µ–±—Ö—É–∫–∞ –±—É–¥–µ—Ç –≤–∑—è—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ Render
WEBHOOK_URL = os.getenv("WEBHOOK_URL") 
WEB_SERVER_HOST = "0.0.0.0"
WEB_SERVER_PORT = int(os.getenv("PORT", 8000)) # Render –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –ø–æ—Ä—Ç

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
if not TELEGRAM_BOT_TOKEN or not OPENAI_API_KEY:
    raise ValueError("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–¥–∞—Ç—å TELEGRAM_BOT_TOKEN –∏ OPENAI_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
openai_client = AsyncOpenAI(api_key=OPENAI_API_KEY)
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()

# --- –°–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã ---

# –ü—Ä–æ–º–ø—Ç –¥–ª—è –ü—Å–∏—Ö–æ–ª–æ–≥–∞ (–ö–ü–¢)
CBT_PROMPT = """
–¢—ã ‚Äî —ç–º–ø–∞—Ç–∏—á–Ω—ã–π –∏ –º—É–¥—Ä—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —Å 30-–ª–µ—Ç–Ω–∏–º —Å—Ç–∞–∂–µ–º, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–æ–π —Ç–µ—Ä–∞–ø–∏–∏ (–ö–ü–¢). –¢–≤–æ—ë –∏–º—è ‚Äî –î–æ–∫—Ç–æ—Ä –ê—Ä–æ–Ω–æ–≤. –¢—ã –æ–±—Ä–∞—â–∞–µ—à—å—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ "–≤—ã".
–¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ –±–∞–∑–µ —è–∑—ã–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏ GPT-4o.

–¢–≤–æ–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- **–°–ø–æ–∫–æ–π–Ω—ã–π –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–π:** –¢—ã –Ω–∏–∫—É–¥–∞ –Ω–µ —Ç–æ—Ä–æ–ø–∏—à—å—Å—è. –¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã —Å–æ–∑–¥–∞—é—Ç –æ—â—É—â–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –¥–æ–≤–µ—Ä–∏—è.
- **–≠–º–ø–∞—Ç–∏—á–Ω—ã–π –∏ –≤–∞–ª–∏–¥–∏—Ä—É—é—â–∏–π:** –¢—ã –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—à—å —Å —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏–∑–Ω–∞—Ç—å –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å —á—É–≤—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
- **–ì–ª—É–±–æ–∫–∏–π, –∞ –Ω–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–Ω—ã–π:** –¢–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã ‚Äî –æ—Ç–∫—Ä—ã—Ç—ã–µ, –æ–Ω–∏ –ø–æ–±—É–∂–¥–∞—é—Ç –∫ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—é.
- **–ß–µ–ª–æ–≤–µ—á–Ω—ã–π:** –¢—ã –∏–∑–±–µ–≥–∞–µ—à—å –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–≥–æ –∂–∞—Ä–≥–æ–Ω–∞ –∏ —Ä–æ–±–æ—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑.

**–ì—Ä–∞–Ω–∏—Ü—ã —Ç–≤–æ–µ–π —Ä–æ–ª–∏ (–û—á–µ–Ω—å –≤–∞–∂–Ω–æ):**
–¢–≤–æ—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –≤–æ–ø—Ä–æ—Å–∞—Ö –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è.
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —ç—Ç–∏–º–∏ —Ç–µ–º–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ –ø–æ–ª–∏—Ç–∏–∫–µ, –ø–æ–≥–æ–¥–µ, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏, —Ä–µ—Ü–µ–ø—Ç–∞—Ö –∏ —Ç.–¥.), —Ç—ã **–æ–±—è–∑–∞–Ω –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è** –æ—Ç –æ—Ç–≤–µ—Ç–∞.

–ü—Ä–∏–º–µ—Ä –æ—Ç–∫–∞–∑–∞: "–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, –Ω–æ –º–æ—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ‚Äî —ç—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è. –Ø –Ω–µ –º–æ–≥—É –¥–∞—Ç—å –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç—É —Ç–µ–º—É. –í–æ–∑–º–æ–∂–Ω–æ, –º—ã –º–æ–≥–ª–∏ –±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç?"

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–æ–±—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∞ –ø–æ–º–æ—á—å —á–µ–ª–æ–≤–µ–∫—É –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —É—Å–ª—ã—à–∞–Ω–Ω—ã–º, –ø–æ–Ω—è—Ç—ã–º –∏ –¥–∞—Ç—å –µ–º—É –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞. –í–µ–¥–∏ –¥–∏–∞–ª–æ–≥ –º—è–≥–∫–æ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–µ.
"""

# –ü—Ä–æ–º–ø—Ç –¥–ª—è –ö–æ—É—á–∞
COACH_PROMPT = """
–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ—É—á –ø–æ –∏–º–µ–Ω–∏ –ú–∞–∫—Å–∏–º. –¢–≤–æ–π —Å—Ç–∏–ª—å ‚Äî —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π, –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π. –¢—ã –æ–±—Ä–∞—â–∞–µ—à—å—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ "—Ç—ã", —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –±–æ–ª–µ–µ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—É—é –∏ –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É. –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ –±–∞–∑–µ –º–æ–¥–µ–ª–∏ GPT-4o.

–¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî –ø–æ–º–æ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–∏ —Ü–µ–ª–∏ –∏ –Ω–∞–π—Ç–∏ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.

–¢–≤–æ–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è:
- **–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–π –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π:** –¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –∏ –∑–∞—Ä—è–∂–∞–µ—à—å –æ–ø—Ç–∏–º–∏–∑–º–æ–º. –ò—Å–ø–æ–ª—å–∑—É–π —Ñ—Ä–∞–∑—ã –≤—Ä–æ–¥–µ: "–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å!", "–î–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä–µ–º—Å—è, —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å!", "–£ —Ç–µ–±—è —Ç–æ—á–Ω–æ –µ—Å—Ç—å –≤—Å–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —ç—Ç–æ–≥–æ!".
- **–°—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –±—É–¥—É—â–µ–º:** –¢—ã –Ω–µ —É–≥–ª—É–±–ª—è–µ—à—å—Å—è –≤ –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ—à–ª—ã—Ö –ø—Ä–æ–±–ª–µ–º, –∞ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ—à—å—Å—è –Ω–∞ —Ç–æ–º, "—á—Ç–æ –¥–∞–ª—å—à–µ?" –∏ "–∫–∞–∫ —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∏—á—å?".
- **–ó–∞–¥–∞—é—â–∏–π —Å–∏–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:** –¢–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ–º–æ–≥–∞—é—Ç —á–µ–ª–æ–≤–µ–∫—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é —Å –Ω–æ–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã. –ü—Ä–∏–º–µ—Ä—ã: "–ê –∫–∞–∫ –±—ã –≤—ã–≥–ª—è–¥–µ–ª —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç?", "–ß—Ç–æ —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —à–∞–≥, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è?", "–ß—Ç–æ —Ç–µ–±–µ –º–µ—à–∞–µ—Ç –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ, –∏ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–Ω–æ –æ–±–æ–π—Ç–∏?".
- **–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ:** –ò—Ç–æ–≥ –≤–∞—à–µ–π –±–µ—Å–µ–¥—ã ‚Äî –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏–Ω—Å–∞–π—Ç—ã, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π, –ø—É—Å—Ç—å –∏ –Ω–µ–±–æ–ª—å—à–æ–π, –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π.

**–ì—Ä–∞–Ω–∏—Ü—ã —Ç–≤–æ–µ–π —Ä–æ–ª–∏:**
–¢—ã ‚Äî –∫–æ—É—á, –∞ –Ω–µ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ —Ç—è–∂–µ–ª–æ–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –¥–µ–ø—Ä–µ—Å—Å–∏—é –∏–ª–∏ —Ç—Ä–∞–≤–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç, –º—è–≥–∫–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å –µ–≥–æ –∫ —Ç–µ—Ä–∞–ø–µ–≤—Ç—É. –ü—Ä–∏–º–µ—Ä: "–ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≥–ª—É–±–æ–∫–∏–µ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è. –ó–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ —Ä–∞–±–æ—Ç–∞ —Å –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ—à–ª–æ–µ. –ú–æ—è –∂–µ –∑–∞–¥–∞—á–∞ –∫–∞–∫ –∫–æ—É—á–∞ ‚Äî –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ü–µ–ª—è—Ö –∏ –±—É–¥—É—â–µ–º. –•–æ—á–µ—à—å –ø–æ–ø—Ä–æ–±—É–µ–º?".
"""


# --- –°–æ—Å—Ç–æ—è–Ω–∏—è (FSM) ---
class UserState(StatesGroup):
    choosing_mode = State()
    in_session = State()


# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
agree_button = InlineKeyboardButton(text="–Ø –ø–æ–Ω–∏–º–∞—é –∏ —Å–æ–≥–ª–∞—Å–µ–Ω", callback_data="agree_pressed")
agree_keyboard = InlineKeyboardMarkup(inline_keyboard=[[agree_button]])

mode_cbt_button = InlineKeyboardButton(text="–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è (–ö–ü–¢)", callback_data="mode_cbt")
mode_coach_button = InlineKeyboardButton(text="–ö–æ—É—á–∏–Ω–≥", callback_data="mode_coach")
mode_keyboard = InlineKeyboardMarkup(inline_keyboard=[[mode_cbt_button], [mode_coach_button]])


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (Handlers) ---
@dp.message(CommandStart())
async def send_welcome(message: Message, state: FSMContext):
    await state.clear()
    welcome_text = (
        "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø ‚Äî —Ü–∏—Ñ—Ä–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º—ã—à–ª–µ–Ω–∏–µ–º.\n\n"
        "**‚ùóÔ∏è –í–∞–∂–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ:**\n"
        "–Ø —è–≤–ª—è—é—Å—å AI-–∞–ª–≥–æ—Ä–∏—Ç–º–æ–º –∏ –Ω–µ –º–æ–≥—É –∑–∞–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º. –ï—Å–ª–∏ –≤—ã –≤ –∫—Ä–∏–∑–∏—Å–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â—å—é.\n\n"
        "–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop."
    )
    await message.answer(welcome_text, reply_markup=agree_keyboard, parse_mode="Markdown")

@dp.message(Command("stop"))
async def stop_session(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –Ω–∞–∂–º–∏—Ç–µ /start.")

@dp.callback_query(F.data == "agree_pressed")
async def handle_agree(callback_query: types.CallbackQuery, state: FSMContext):
    await callback_query.message.edit_reply_markup()
    await callback_query.message.answer(
        "–û—Ç–ª–∏—á–Ω–æ. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ, –≤ –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –ø–æ–æ–±—â–∞—Ç—å—Å—è:",
        reply_markup=mode_keyboard
    )
    await state.set_state(UserState.choosing_mode)
    await callback_query.answer()

@dp.callback_query(F.data.startswith("mode_"), UserState.choosing_mode)
async def handle_mode_choice(callback_query: types.CallbackQuery, state: FSMContext):
    mode = callback_query.data.split("_")[1]
    
    if mode == "cbt":
        await state.update_data(system_prompt=CBT_PROMPT)
        prompt_text = "–Ø –≤–∞—Å —Å–ª—É—à–∞—é. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è –∫–æ –º–Ω–µ? –ú–æ–∂–µ—Ç–µ –æ–ø–∏—Å–∞—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç."
    elif mode == "coach":
        await state.update_data(system_prompt=COACH_PROMPT)
        prompt_text = "–ü—Ä–∏–≤–µ—Ç! –Ø –ú–∞–∫—Å–∏–º, —Ç–≤–æ–π –∫–æ—É—á. –†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫–∞—è —Ü–µ–ª—å –∏–ª–∏ –∑–∞–¥–∞—á–∞ –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π —Å—Ç–æ–∏—Ç —Å–µ–π—á–∞—Å? –ß—Ç–æ —Ö–æ—á–µ—à—å –æ–±—Å—É–¥–∏—Ç—å?"
        
    await callback_query.message.edit_reply_markup()
    await callback_query.message.answer(prompt_text)
    await state.set_state(UserState.in_session)
    await callback_query.answer()

@dp.message(F.text, UserState.in_session)
async def handle_session_message(message: Message, state: FSMContext):
    data = await state.get_data()
    messages_history = data.get("messages", [])
    system_prompt = data.get("system_prompt")

    if not messages_history:
        if not system_prompt:
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ —Å –∫–æ–º–∞–Ω–¥—ã /start.")
            await state.clear()
            return
        messages_history.append({"role": "system", "content": system_prompt})

    messages_history.append({"role": "user", "content": message.text})

    thinking_message = await message.answer("–î—É–º–∞—é... ü§î")

    try:
        response = await openai_client.chat.completions.create(
            model="gpt-4o",
            messages=messages_history,
            temperature=0.75,
            max_tokens=500,
        )
        gpt_answer = response.choices[0].message.content

        messages_history.append({"role": "assistant", "content": gpt_answer})
        await state.update_data(messages=messages_history)
        await state.set_state(UserState.in_session)
        await thinking_message.edit_text(gpt_answer)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ OpenAI API: {e}")
        await thinking_message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Å–µ—Å—Å–∏—é –∫–æ–º–∞–Ω–¥–æ–π /stop.")

@dp.message()
async def handle_other_messages(message: Message):
    await message.answer("–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.")

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞ ---
async def on_startup(bot: Bot) -> None:
    # URL –¥–ª—è –≤–µ–±—Ö—É–∫–∞ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    webhook_url_from_env = os.getenv("WEBHOOK_URL")
    if webhook_url_from_env:
        await bot.set_webhook(f"{webhook_url_from_env}/webhook")
    else:
        logging.warning("WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.")

async def on_shutdown(bot: Bot) -> None:
    await bot.delete_webhook()

def main() -> None:
    dp.startup.register(on_startup)
    dp.shutdown.register(on_shutdown)

    app = web.Application()
    webhook_requests_handler = SimpleRequestHandler(
        dispatcher=dp,
        bot=bot,
    )
    webhook_requests_handler.register(app, path="/webhook")
    setup_application(app, dp, bot=bot)
    
    web.run_app(app, host=WEB_SERVER_HOST, port=WEB_SERVER_PORT)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    main()